{"ast":null,"code":"import _objectSpread from\"C:/Users/parky/Desktop/inflearn/EmotionDiary/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/parky/Desktop/inflearn/EmotionDiary/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useContext,useEffect,useRef,useState,useCallback}from\"react\";import{useNavigate}from\"react-router-dom\";import{DiaryDispatchContext}from\"../App\";import EmotionItem from\"./EmotionItem\";import MyButton from\"./MyButton\";import MyHeader from\"./MyHeader\";import{getStringDate}from\"../util/date.js\";import{emotionList}from\"../util/emotion.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var env=process.env;env.PUBLIC_URL=env.PUBLIC_URL||\"\";var DiaryEditor=function DiaryEditor(_ref){var isEdit=_ref.isEdit,originData=_ref.originData;var contentRef=useRef();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),content=_useState2[0],setContent=_useState2[1];var _useState3=useState(3),_useState4=_slicedToArray(_useState3,2),emotion=_useState4[0],setEmotion=_useState4[1];var _useState5=useState(getStringDate(new Date())),_useState6=_slicedToArray(_useState5,2),date=_useState6[0],setDate=_useState6[1];var _useContext=useContext(DiaryDispatchContext),onCreate=_useContext.onCreate,onEdit=_useContext.onEdit,onRemove=_useContext.onRemove;var handleClickEmote=useCallback(function(emotion){setEmotion(emotion);},[]);var navigate=useNavigate();var handleSubmit=function handleSubmit(){if(content.length<1){contentRef.current.focus();return;}if(window.confirm(isEdit?\"일기를 수정하시겠습니까?\":\"새로운 일기를 작성 하시겠습니까?\")){if(!isEdit){onCreate(date,content,emotion);}else{onEdit(originData.id,date,content,emotion);}}navigate(\"/\",{replace:true});};var handleRemove=function handleRemove(){if(window.confirm(\"정말 삭제하시겠습니까?\")){onRemove(originData.id);navigate(\"/\",{replace:true});}};useEffect(function(){if(isEdit){setDate(getStringDate(new Date(parseInt(originData.date))));setEmotion(originData.emotion);setContent(originData.content);}},[isEdit,originData]);return/*#__PURE__*/_jsxs(\"div\",{className:\"DiaryEditor\",children:[/*#__PURE__*/_jsx(MyHeader,{headeText:isEdit?\"일기 수정하기\":\"새 일기 쓰기\",leftChild:/*#__PURE__*/_jsx(MyButton,{text:\"< 뒤로가기\",onClick:function onClick(){return navigate(-1);}}),rightChild:isEdit&&/*#__PURE__*/_jsx(MyButton,{text:\"삭제하기\",type:\"negative\",onClick:handleRemove})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uC624\\uB298\\uC740 \\uC5B8\\uC81C\\uC778\\uAC00\\uC694?\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input_box\",children:/*#__PURE__*/_jsx(\"input\",{className:\"input_date\",value:date,onChange:function onChange(e){return setDate(e.target.value);},type:\"date\"})})]}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uC624\\uB298\\uC758 \\uAC10\\uC815\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input_box emotion_list_wrapper\",children:emotionList.map(function(it){return/*#__PURE__*/_jsx(EmotionItem,_objectSpread(_objectSpread({},it),{},{onClick:handleClickEmote,isSelected:it.emotion_id===emotion}),it.emotion_id);})})]}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uC624\\uB298\\uC758 \\uC77C\\uAE30\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input_box text_wrapper\",children:/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\uC624\\uB298\\uC740 \\uC5B4\\uB560\\uB098\\uC694\",ref:contentRef,value:content,onChange:function onChange(e){return setContent(e.target.value);}})})]}),/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"control_box\",children:[/*#__PURE__*/_jsx(MyButton,{text:\"취소하기\",onClick:function onClick(){return navigate(-1);}}),/*#__PURE__*/_jsx(MyButton,{text:\"작성완료\",type:\"positive\",onClick:handleSubmit})]})})]})]});};export default DiaryEditor;","map":{"version":3,"names":["useContext","useEffect","useRef","useState","useCallback","useNavigate","DiaryDispatchContext","EmotionItem","MyButton","MyHeader","getStringDate","emotionList","env","process","PUBLIC_URL","DiaryEditor","isEdit","originData","contentRef","content","setContent","emotion","setEmotion","Date","date","setDate","onCreate","onEdit","onRemove","handleClickEmote","navigate","handleSubmit","length","current","focus","window","confirm","id","replace","handleRemove","parseInt","e","target","value","map","it","emotion_id"],"sources":["C:/Users/parky/Desktop/inflearn/EmotionDiary/src/components/DiaryEditor.js"],"sourcesContent":["import { useContext, useEffect, useRef, useState, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { DiaryDispatchContext } from \"../App\";\r\nimport EmotionItem from \"./EmotionItem\";\r\nimport MyButton from \"./MyButton\";\r\nimport MyHeader from \"./MyHeader\";\r\nimport { getStringDate } from \"../util/date.js\";\r\nimport { emotionList } from \"../util/emotion.js\";\r\n\r\nconst env = process.env;\r\nenv.PUBLIC_URL = env.PUBLIC_URL || \"\";\r\n\r\nconst DiaryEditor = ({ isEdit, originData }) => {\r\n  const contentRef = useRef();\r\n  const [content, setContent] = useState(\"\");\r\n  const [emotion, setEmotion] = useState(3);\r\n  const [date, setDate] = useState(getStringDate(new Date()));\r\n\r\n  const { onCreate, onEdit, onRemove } = useContext(DiaryDispatchContext);\r\n  const handleClickEmote = useCallback((emotion) => {\r\n    setEmotion(emotion);\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = () => {\r\n    if (content.length < 1) {\r\n      contentRef.current.focus();\r\n      return;\r\n    }\r\n    if (\r\n      window.confirm(\r\n        isEdit ? \"일기를 수정하시겠습니까?\" : \"새로운 일기를 작성 하시겠습니까?\"\r\n      )\r\n    ) {\r\n      if (!isEdit) {\r\n        onCreate(date, content, emotion);\r\n      } else {\r\n        onEdit(originData.id, date, content, emotion);\r\n      }\r\n    }\r\n\r\n    navigate(\"/\", { replace: true });\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\r\n      onRemove(originData.id);\r\n      navigate(\"/\", { replace: true });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      setDate(getStringDate(new Date(parseInt(originData.date))));\r\n      setEmotion(originData.emotion);\r\n      setContent(originData.content);\r\n    }\r\n  }, [isEdit, originData]);\r\n\r\n  return (\r\n    <div className=\"DiaryEditor\">\r\n      <MyHeader\r\n        headeText={isEdit ? \"일기 수정하기\" : \"새 일기 쓰기\"}\r\n        leftChild={\r\n          <MyButton text={\"< 뒤로가기\"} onClick={() => navigate(-1)} />\r\n        }\r\n        rightChild={\r\n          isEdit && (\r\n            <MyButton\r\n              text={\"삭제하기\"}\r\n              type={\"negative\"}\r\n              onClick={handleRemove}\r\n            />\r\n          )\r\n        }\r\n      />\r\n      <div>\r\n        <section>\r\n          <h4>오늘은 언제인가요?</h4>\r\n          <div className=\"input_box\">\r\n            <input\r\n              className=\"input_date\"\r\n              value={date}\r\n              onChange={(e) => setDate(e.target.value)}\r\n              type=\"date\"\r\n            />\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <h4>오늘의 감정</h4>\r\n          <div className=\"input_box emotion_list_wrapper\">\r\n            {emotionList.map((it) => (\r\n              <EmotionItem\r\n                key={it.emotion_id}\r\n                {...it}\r\n                onClick={handleClickEmote}\r\n                isSelected={it.emotion_id === emotion}\r\n              />\r\n            ))}\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <h4>오늘의 일기</h4>\r\n          <div className=\"input_box text_wrapper\">\r\n            <textarea\r\n              placeholder=\"오늘은 어땠나요\"\r\n              ref={contentRef}\r\n              value={content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n            />\r\n          </div>\r\n        </section>\r\n        <section>\r\n          <div className=\"control_box\">\r\n            <MyButton text={\"취소하기\"} onClick={() => navigate(-1)} />\r\n            <MyButton\r\n              text={\"작성완료\"}\r\n              type={\"positive\"}\r\n              onClick={handleSubmit}\r\n            />\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiaryEditor;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}