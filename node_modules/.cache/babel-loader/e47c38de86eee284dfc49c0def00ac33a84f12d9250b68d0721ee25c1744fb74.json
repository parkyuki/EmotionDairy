{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parky\\\\Desktop\\\\inflearn\\\\EmotionDiary\\\\src\\\\pages\\\\Diary.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport { getStringDate } from \"../util/date\";\nimport { emotionList } from \"../util/emotion\";\nimport MyHeader from \"../components/MyHeader\";\nimport MyButton from \"../components/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Diary = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n  useEffect(() => {\n    const titleElement = document.getElementsByTagName(\"title\")[0];\n    titleElement.innerHTML = `감정 일기장 - ${id}번 일기`;\n  }, []);\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(it => parseInt(it.id) === parseInt(id));\n      if (targetDiary) {\n        // 일기가 존재할 때\n        setData(targetDiary);\n      } else {\n        // 일기가 없을 때\n        alert(\"없는 일기입니다.\");\n        navigate(\"/\", {\n          replace: true\n        });\n      }\n    }\n  }, [id, diaryList]);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryPage\",\n      children: \"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  } else {\n    const curEmotionData = emotionList.find(it => parseInt(it.emotion_id) === parseInt(data.emotion));\n    console.log(curEmotionData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryPage\",\n      children: [/*#__PURE__*/_jsxDEV(MyHeader, {\n        headText: `${getStringDate(new Date(data.date))} 기록`,\n        leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n          text: \"< 뒤로가기\",\n          onClick: () => navigate(-1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this),\n        rightChild: /*#__PURE__*/_jsxDEV(MyButton, {\n          text: \"수정하기\",\n          onClick: () => navigate(`/edit/${data.id}`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC624\\uB298\\uC758 \\uAC10\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: [\"diary_img_wrapper\", `diary_img_wrapper_${data.emotion}`].join(\" \"),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: curEmotionData.emotion_img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"emotion_descript\",\n              children: curEmotionData.emotion_descript\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC624\\uB298\\uC758 \\uC77C\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"diary_content_wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Diary, \"kri/UPfg3VhfUkJ23VL3LyJ/cE4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Diary;\nexport default Diary;\nvar _c;\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"names":["useState","useContext","useEffect","useNavigate","useParams","DiaryStateContext","getStringDate","emotionList","MyHeader","MyButton","Diary","id","diaryList","navigate","data","setData","titleElement","document","getElementsByTagName","innerHTML","length","targetDiary","find","it","parseInt","alert","replace","curEmotionData","emotion_id","emotion","console","log","Date","date","join","emotion_img","emotion_descript","content"],"sources":["C:/Users/parky/Desktop/inflearn/EmotionDiary/src/pages/Diary.js"],"sourcesContent":["import { useState, useContext, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { DiaryStateContext } from \"../App\";\r\nimport { getStringDate } from \"../util/date\";\r\nimport { emotionList } from \"../util/emotion\";\r\n\r\nimport MyHeader from \"../components/MyHeader\";\r\nimport MyButton from \"../components/MyButton\";\r\n\r\nconst Diary = () => {\r\n  const { id } = useParams();\r\n  const diaryList = useContext(DiaryStateContext);\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n    const titleElement = document.getElementsByTagName(\"title\")[0];\r\n    titleElement.innerHTML = `감정 일기장 - ${id}번 일기`;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (diaryList.length >= 1) {\r\n      const targetDiary = diaryList.find(\r\n        (it) => parseInt(it.id) === parseInt(id)\r\n      );\r\n\r\n      if (targetDiary) {\r\n        // 일기가 존재할 때\r\n        setData(targetDiary);\r\n      } else {\r\n        // 일기가 없을 때\r\n        alert(\"없는 일기입니다.\");\r\n        navigate(\"/\", { replace: true });\r\n      }\r\n    }\r\n  }, [id, diaryList]);\r\n\r\n  if (!data) {\r\n    return <div className=\"DiaryPage\">로딩중입니다...</div>;\r\n  } else {\r\n    const curEmotionData = emotionList.find(\r\n      (it) => parseInt(it.emotion_id) === parseInt(data.emotion)\r\n    );\r\n    console.log(curEmotionData);\r\n\r\n    return (\r\n      <div className=\"DiaryPage\">\r\n        <MyHeader\r\n          headText={`${getStringDate(new Date(data.date))} 기록`}\r\n          leftChild={\r\n            <MyButton text={\"< 뒤로가기\"} onClick={() => navigate(-1)} />\r\n          }\r\n          rightChild={\r\n            <MyButton\r\n              text={\"수정하기\"}\r\n              onClick={() => navigate(`/edit/${data.id}`)}\r\n            />\r\n          }\r\n        />\r\n        <article>\r\n          <section>\r\n            <h4>오늘의 감정</h4>\r\n            <div\r\n              className={[\r\n                \"diary_img_wrapper\",\r\n                `diary_img_wrapper_${data.emotion}`,\r\n              ].join(\" \")}\r\n            >\r\n              <img src={curEmotionData.emotion_img} />\r\n              <div className=\"emotion_descript\">\r\n                {curEmotionData.emotion_descript}\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section>\r\n            <h4>오늘의 일기</h4>\r\n            <div className=\"diary_content_wrapper\">\r\n              <p>{data.content}</p>\r\n            </div>\r\n          </section>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Diary;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}